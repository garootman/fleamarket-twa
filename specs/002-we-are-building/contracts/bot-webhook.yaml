openapi: 3.0.3
info:
  title: Telegram Bot Webhook API
  description: API endpoints for handling Telegram bot webhooks
  version: 1.0.0

servers:
  - url: https://api.example.com/webhook
    description: Production server
  - url: https://preview.api.example.com/webhook
    description: Preview server

paths:
  /webhook:
    post:
      summary: Handle Telegram webhook updates
      description: Receives webhook updates from Telegram Bot API. Environment determined by deployment URL
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TelegramUpdate'
      responses:
        '200':
          description: Update processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
        '400':
          description: Invalid request format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Invalid webhook signature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /health:
    get:
      summary: Health check endpoint
      description: Returns service health status
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

components:
  schemas:
    TelegramUpdate:
      type: object
      properties:
        update_id:
          type: integer
          description: Unique update identifier
        message:
          $ref: '#/components/schemas/TelegramMessage'
        callback_query:
          $ref: '#/components/schemas/TelegramCallbackQuery'
      required:
        - update_id

    TelegramMessage:
      type: object
      properties:
        message_id:
          type: integer
        from:
          $ref: '#/components/schemas/TelegramUser'
        chat:
          $ref: '#/components/schemas/TelegramChat'
        date:
          type: integer
          description: Unix timestamp
        text:
          type: string
          maxLength: 4096
        web_app_data:
          $ref: '#/components/schemas/WebAppData'
      required:
        - message_id
        - from
        - chat
        - date

    TelegramUser:
      type: object
      properties:
        id:
          type: integer
          description: Telegram user ID
        is_bot:
          type: boolean
        first_name:
          type: string
          maxLength: 64
        last_name:
          type: string
          maxLength: 64
        username:
          type: string
          maxLength: 32
        language_code:
          type: string
          pattern: '^[a-z]{2}$'
      required:
        - id
        - is_bot
        - first_name

    TelegramChat:
      type: object
      properties:
        id:
          type: integer
        type:
          type: string
          enum: [private, group, supergroup, channel]
        title:
          type: string
        username:
          type: string
        first_name:
          type: string
        last_name:
          type: string
      required:
        - id
        - type

    TelegramCallbackQuery:
      type: object
      properties:
        id:
          type: string
        from:
          $ref: '#/components/schemas/TelegramUser'
        message:
          $ref: '#/components/schemas/TelegramMessage'
        data:
          type: string
          maxLength: 64
      required:
        - id
        - from

    WebAppData:
      type: object
      properties:
        data:
          type: string
          description: Data from web app
        button_text:
          type: string
          description: Text of the web app button
      required:
        - data

    WebhookResponse:
      type: object
      properties:
        ok:
          type: boolean
          example: true
        processed_at:
          type: string
          format: date-time
        update_id:
          type: integer
      required:
        - ok
        - processed_at

    HealthResponse:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, degraded, unhealthy]
        timestamp:
          type: string
          format: date-time
        environment:
          type: string
          enum: [local, preview, prod]
        version:
          type: string
      required:
        - status
        - timestamp
        - environment

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        timestamp:
          type: string
          format: date-time
        request_id:
          type: string
      required:
        - error
        - message
        - timestamp