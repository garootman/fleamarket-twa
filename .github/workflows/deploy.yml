name: Deploy Telegram Web App Template

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '18'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Run backend tests
        run: |
          cd backend
          npm run test

      - name: Run frontend tests
        run: |
          cd frontend
          npm run test

      - name: Type check backend
        run: |
          cd backend
          npm run typecheck

      - name: Type check frontend
        run: |
          cd frontend
          npm run typecheck

  deploy-preview:
    name: Deploy Preview Environment
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    environment: preview
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Deploy to Cloudflare Workers (Preview)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --env preview
          workingDirectory: ./backend
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN_PREVIEW }}

      - name: Deploy to Cloudflare Pages (Preview)
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: twa-cf-tpl-frontend
          directory: ./frontend/dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Preview Webhook
        run: |
          curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN_PREVIEW }}/setWebhook" \
            -H "Content-Type: application/json" \
            -d '{
              "url": "https://twa-cf-tpl-preview.your-account.workers.dev/webhook",
              "allowed_updates": ["message", "callback_query"]
            }'

  deploy-production:
    name: Deploy Production Environment
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Deploy to Cloudflare Workers (Production)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --env production
          workingDirectory: ./backend
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN_PROD }}

      - name: Deploy to Cloudflare Pages (Production)
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: twa-cf-tpl-frontend
          directory: ./frontend/dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Production Webhook
        run: |
          curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN_PROD }}/setWebhook" \
            -H "Content-Type: application/json" \
            -d '{
              "url": "https://twa-cf-tpl-prod.your-account.workers.dev/webhook",
              "allowed_updates": ["message", "callback_query"]
            }'

      - name: Health Check
        run: |
          sleep 10
          curl -f "https://twa-cf-tpl-prod.your-account.workers.dev/health" || exit 1