name: Deploy Cloudflare Worker

on:
  workflow_call:

env:
  NODE_VERSION: '18'

jobs:
  deploy-worker:
    name: Deploy Worker
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'backend/package-lock.json'

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Set Cloudflare Secrets
        run: |
          cd backend
          echo "${{ secrets.TELEGRAM_BOT_TOKEN }}" | npx wrangler secret put TELEGRAM_BOT_TOKEN
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Deploy to Cloudflare Workers
        id: deploy
        run: |
          cd backend
          npx wrangler deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Get Worker URL
        id: worker-url
        run: |
          # Use default worker URL format
          WORKER_URL="https://twa-cf-tpl.${{ secrets.CLOUDFLARE_ACCOUNT_ID }}.workers.dev"
          echo "url=$WORKER_URL" >> $GITHUB_OUTPUT

      - name: Test Worker Health
        run: |
          sleep 10
          echo "Testing Worker at: ${{ steps.worker-url.outputs.url }}"

          # Test health endpoint
          response=$(curl -s -o /dev/null -w "%{http_code}" "${{ steps.worker-url.outputs.url }}/health")
          if [ "$response" != "200" ]; then
            echo "❌ Health check failed with status $response"
            exit 1
          fi

          # Test hello endpoint
          response=$(curl -s -o /dev/null -w "%{http_code}" "${{ steps.worker-url.outputs.url }}/api/hello")
          if [ "$response" != "200" ]; then
            echo "❌ Hello API check failed with status $response"
            exit 1
          fi

          echo "Worker deployment verified"

