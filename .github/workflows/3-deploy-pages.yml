name: Deploy Cloudflare Pages

on:
  workflow_call:

env:
  NODE_VERSION: '20'

jobs:
  deploy-pages:
    name: Deploy Pages
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Deploy to Cloudflare Pages
        id: deploy-pages
        run: |
          cd frontend
          # Capture deployment output to get actual URL
          deployment_output=$(npx wrangler pages deploy dist --project-name=twa-cf-tpl 2>&1)
          echo "Deployment output:"
          echo "$deployment_output"

          # Extract deployment URL if available
          if echo "$deployment_output" | grep -q "https://"; then
            deployment_url=$(echo "$deployment_output" | grep -o "https://[^[:space:]]*" | head -1)
            echo "deployment_url=$deployment_url" >> $GITHUB_OUTPUT
          else
            echo "deployment_url=https://twa-cf-tpl.pages.dev" >> $GITHUB_OUTPUT
          fi
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Get Pages URL
        id: pages-url
        run: |
          # Use deployment URL or default
          PAGES_URL="${{ steps.deploy-pages.outputs.deployment_url }}"
          echo "Pages URL: $PAGES_URL"
          echo "url=$PAGES_URL" >> $GITHUB_OUTPUT

      - name: Test Pages Deployment
        run: |
          sleep 15
          echo "Testing Pages at: ${{ steps.pages-url.outputs.url }}"

          # Test if pages serve the index.html with detailed output
          echo "Testing Pages root endpoint..."
          pages_response=$(curl -s -w "%{http_code}" "${{ steps.pages-url.outputs.url }}/")
          pages_status=$(echo "$pages_response" | tail -c 4)
          pages_body=$(echo "$pages_response" | head -c -4)

          echo "Pages endpoint returned status: $pages_status"
          echo "Pages response body length: $(echo "$pages_body" | wc -c) characters"

          if [ "$pages_status" != "200" ]; then
            echo "⚠️  Pages check returned status $pages_status (may be normal for preview URLs)"
            if [ "$pages_status" == "000" ]; then
              echo "❌ DNS resolution or connection failed"
              exit 1
            fi
          else
            echo "✅ Pages deployment verified"
          fi

